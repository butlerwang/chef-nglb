#!/bin/sh
#
# nginx - this script starts and stops the nginx daemin
#
# chkconfig:   - 85 15 
# description:  Nginx is an HTTP(S) server, HTTP(S) reverse \
#               proxy and IMAP/POP3 proxy server
#               This file is config by Chef
# processname: nginx
# config:      /usr/local/nginx/conf/nginx.conf
# pidfile:     /usr/local/nginx/logs/nginx.pid

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ "$NETWORKING" = "no" ] && exit 0

nginx="/usr/local/nginx/sbin/nginx"
prog=$(basename $nginx)

lockfile=/var/lock/subsys/nginx
pidfile="/usr/local/nginx/logs/nginx.pid"

NGINX_CONF_FILE="/usr/local/nginx/conf/nginx.conf"

start() {
	[ -x $nginx ] || exit 5
	[ -f $NGINX_CONF_FILE ] || exit 6
	echo -n $"Starting $prog: "
	daemon --pidfile=$pidfile $nginx -c $NGINX_CONF_FILE
	retval=$?
	echo
	[ $retval -eq 0 ] && touch $lockfile
	return $retval
}

stop() {
	echo -n $"Stopping $prog: "
	killproc -p $pidfile $prog
	retval=$?
	echo
	[ $retval -eq 0 ] && rm -f $lockfile
	return $retval
}

restart() {
	configtest_q || return 6
	stop
	start
}

reload() {
	configtest_q || return 6
	echo -n $"Reloading $prog: "
	killproc -p $pidfile $prog -HUP
	echo
}

configtest() {
	$nginx -t -c $NGINX_CONF_FILE
}

configtest_q() {
	$nginx -t -q -c $NGINX_CONF_FILE
}

rh_status() {
	configtest
	status -p $pidfile $prog
}

rh_status_q() {
	rh_status >/dev/null 2>&1
}

upgrade() {
	configtest_q || return 6

	local oldbin_pidfile="${pidfile}.oldbin"

	echo -n $"Upgrading $prog: "
	killproc -p $pidfile $prog -USR2
	retval=$?
	sleep 1
	if [[ -f ${oldbin_pidfile} && -f ${pidfile} ]]; then
		killproc -p $oldbin_pidfile $prog -QUIT
		success $"$prog online upgrade"
		echo 
		return 0
	else
		failure $"$prog online upgrade"
		echo
		return 1
	fi
}

reopen_logs() {
	configtest_q || return 6
	echo -n $"Reopening $prog logs: "
	killproc -p $pidfile $prog -USR1
	retval=$?
	echo
	return $retval
}

rotate() {
	if [ -f /etc/nginx_custom_log ]; then
		customers=`cat /etc/nginx_custom_log`
		for customer in $customers; do
			a=$(zcat $(ls -tr /data/proclog/log/nginx/access/${customer}_* |tail -n1)|head -n1|md5sum)
			b=$(head -n1 /data/proclog/log/nginx/${customer}.log.1|md5sum)
			if [[ $a == $b ]]; then
				echo "exist ${customer}"
			else
				name=${customer}_`date +%s`.log.gz
				cat /data/proclog/log/nginx/${customer}.log.1 | gzip > /data/proclog/log/nginx/${name}
				mv /data/proclog/log/nginx/${name} /data/proclog/log/nginx/access/
			fi
		done
	fi
}

case "$1" in
	start)
		rh_status_q && rh_status && exit 0
		$1
		;;
	stop)
		rh_status_q || exit 0
		$1
		;;
	restart|configtest|reopen_logs)
		$1
		;;
	force-reload|upgrade)
		rh_status_q || exit 7
		upgrade
		;;
	reload)
		rh_status_q || exit 7
		$1
		;;
	status|status_q)
		rh_$1
		;;
	condrestart|try-restart)
		rh_status_q || exit 7
		restart
		;;
	rotate)
		$1
		;;
	*)
		echo $"Usage: $0 {start|stop|reload|configtest|status|force-reload|upgrade|restart|reopen_logs|rotate}"
		exit 2
esac
